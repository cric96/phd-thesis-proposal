@inproceedings{scafiweb,
  author    = {Gianluca Aguzzi and
               Roberto Casadei and
               Niccol{\`{o}} Maltoni and
               Danilo Pianini and
               Mirko Viroli},
  editor    = {Ferruccio Damiani and
               Ornela Dardha},
  title     = {ScaFi-Web: {A} Web-Based Application for Field-Based Coordination
               Programming},
  booktitle = {Coordination Models and Languages - 23rd {IFIP} {WG} 6.1 International
               Conference, {COORDINATION} 2021},
  series    = {Lecture Notes in Computer Science},
  volume    = {12717},
  pages     = {285--299},
  publisher = {Springer},
  annote    = {mine},
  year      = {2021},
  _url       = {https://doi.org/10.1007/978-3-030-78142-2\_18},
  doi       = {10.1007/978-3-030-78142-2\_18},
  timestamp = {Tue, 15 Jun 2021 17:23:40 +0200},
  _biburl    = {https://dblp.org/rec/conf/coordination/AguzziCMPV21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  abstract  = {Field-based coordination is a model for expressing the coordination logic of large-scale adaptive systems, composing functional blocks from a global perspective. As for any coordination model, a proper toolchain must be developed to support its adoption across all development phases. Under this point of view, the ScaFi toolkit provides a coordination language (field calculus) as a DSL internal in the Scala language, a library of reusable building blocks, and an infrastructure for simulation of distributed deployments. In this work, we enrich such a toolchain by introducing ScaFi-Web, a web-based application allowing in-browser editing, execution, and visualisation of ScaFi programs. ScaFi-Web facilitates access to the ScaFi coordination technology by flattening the learning curve and simplifying configuration and requirements, thus promoting agile prototyping of field-based coordination specifications. In turn, this opens the door to easier demonstrations and experimentation, and also constitutes a stepping stone towards monitoring and control of simulated/deployed systems.}
}

@article{collectiveautonomy,
  author    = {Roberto Casadei and
               Gianluca Aguzzi and
               Mirko Viroli},
  title     = {A Programming Approach to Collective Autonomy},
  journal   = {J. Sens. Actuator Networks},
  volume    = {10},
  number    = {2},
  pages     = {27},
  year      = {2021},
  url       = {https://doi.org/10.3390/jsan10020027},
  doi       = {10.3390/jsan10020027},
  timestamp = {Thu, 16 Sep 2021 17:57:56 +0200},
  biburl    = {https://dblp.org/rec/journals/jsan/CasadeiAV21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  annote    = {mine},
  abstract  = {Research and technology developments on autonomous agents and autonomic computing promote a vision of artificial systems that are able to resiliently manage themselves and autonomously deal with issues at runtime in dynamic environments. Indeed, autonomy can be leveraged to unburden humans from mundane tasks (cf. driving and autonomous vehicles), from the risk of operating in unknown or perilous environments (cf. rescue scenarios), or to support timely decision-making in complex settings (cf. data-centre operations). Beyond the results that individual autonomous agents can carry out, a further opportunity lies in the collaboration of multiple agents or robots. Emerging macro-paradigms provide an approach to programming whole collectives towards global goals. Aggregate computing is one such paradigm, formally grounded in a calculus of computational fields enabling functional composition of collective behaviours that could be proved, under certain technical conditions, to be self-stabilising. In this work, we address the concept of collective autonomy, i.e., the form of autonomy that applies at the level of a group of individuals. As a contribution, we define an agent control architecture for aggregate multi-agent systems, discuss how the aggregate computing framework relates to both individual and collective autonomy, and show how it can be used to program collective autonomous behaviour. We exemplify the concepts through a simulated case study, and outline a research roadmap towards reliable aggregate autonomy.}
}

@inproceedings{research,
  author    = {Gianluca Aguzzi},
  title     = {Research directions for Aggregate Computing with Machine Learning},
  annote    = {mine},
  booktitle = {2st IEEE International Conference on Autonomic Computing and Self-Organizing Systems - ACSOS 2021},
  abstract  = {Collective adaptive systems (CASs) are challenging
from the engineering perspective. Different techniques aim at
taming these systems, either using declarative or black-box approaches (e.g. Machine Learning, Evolutionary Algorithms, etc.).
Among the many declarative approaches, Aggregate Computing
is a novel technique by which developers can express collective
system behaviours from a global perspective, using a compositional and functional programming technique. Over the years,
Aggregate Computing has been applied in different scenarios,
ranging from smart cities to a crowd of augmented people.
Despite its promising capabilities, it is sometimes challenging to
describe aggregate behaviours, so we aim at merging Aggregate
Computing with black-box techniques to simplify the aggregate
program synthesis}
}

@inproceedings{scafiloci,
  author    = {Gianluca Aguzzi and
               Roberto Casadei and
               Danilo Pianini and
               Guido Salvaneschi and
               Mirko Viroli},
  title     = {Towards Pulverised Architectures for Collective Adaptive Systems through Multi-tier Programming},
  booktitle = {eCAS 2021: 6th eCAS Workshop on Engineering Collective Adaptive Systems},
  annote    = {mine},
  abstract  = {Field-based coordination is a model for expressing the coordination logic of large-scale adaptive systems, composing functional blocks from a global perspective. As for any coordination model, a proper toolchain must be developed to support its adoption across all development phases. Under this point of view, the ScaFi toolkit provides a coordination language (field calculus) as a DSL internal in the Scala language, a library of reusable building blocks, and an infrastructure for simulation of distributed deployments. In this work, we enrich such a toolchain by introducing ScaFi-Web, a web-based application allowing in-browser editing, execution, and visualisation of ScaFi programs. ScaFi-Web facilitates access to the ScaFi coordination technology by flattening the learning curve and simplifying configuration and requirements, thus promoting agile prototyping of field-based coordination specifications. In turn, this opens the door to easier demonstrations and experimentation, and also constitutes a stepping stone towards monitoring and control of simulated/deployed systems.}
}
@inproceedings{scafi,
  author    = {Roberto Casadei and
               Mirko Viroli and
               Giorgio Audrito and
               Ferruccio Damiani},
  editor    = {Tiziana Margaria and
               Bernhard Steffen},
  title     = {FScaFi : {A} Core Calculus for Collective Adaptive Systems Programming},
  booktitle = {Leveraging Applications of Formal Methods, Verification and Validation:
               Engineering Principles - 9th International Symposium on Leveraging
               Applications of Formal Methods, ISoLA 2020, Rhodes, Greece, October
               20-30, 2020, Proceedings, Part {II}},
  series    = {Lecture Notes in Computer Science},
  volume    = {12477},
  pages     = {344--360},
  publisher = {Springer},
  year      = {2020},
  annote    = {other},
  url       = {https://doi.org/10.1007/978-3-030-61470-6\_21},
  doi       = {10.1007/978-3-030-61470-6\_21},
  timestamp = {Sat, 14 Nov 2020 00:56:54 +0100},
  biburl    = {https://dblp.org/rec/conf/isola/CasadeiVAD20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{aggregatecomputing,
  author    = {Jacob Beal and
               Danilo Pianini and
               Mirko Viroli},
  title     = {Aggregate Programming for the Internet of Things},
  journal   = {Computer},
  volume    = {48},
  number    = {9},
  pages     = {22--30},
  year      = {2015},
  url       = {https://doi.org/10.1109/MC.2015.261},
  doi       = {10.1109/MC.2015.261},
  annote    = {other},
  timestamp = {Wed, 12 Aug 2020 10:31:37 +0200},
  biburl    = {https://dblp.org/rec/journals/computer/BealPV15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{processes,
  author    = {Roberto Casadei and
               Mirko Viroli and
               Giorgio Audrito and
               Danilo Pianini and
               Ferruccio Damiani},
  title     = {Engineering collective intelligence at the edge with aggregate processes},
  journal   = {Eng. Appl. Artif. Intell.},
  volume    = {97},
  pages     = {104081},
  year      = {2021},
  url       = {https://doi.org/10.1016/j.engappai.2020.104081},
  doi       = {10.1016/j.engappai.2020.104081},
  timestamp = {Mon, 21 Dec 2020 09:15:18 +0100},
  annote    = {other},
  biburl    = {https://dblp.org/rec/journals/eaai/CasadeiVAPD21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/DAngeloGGGNPT19,
  author    = {Mirko D'Angelo and
               Simos Gerasimou and
               Sona Ghahremani and
               Johannes Grohmann and
               Ingrid Nunes and
               Evangelos Pournaras and
               Sven Tomforde},
  editor    = {Marin Litoiu and
               Siobh{\'{a}}n Clarke and
               Kenji Tei},
  title     = {On learning in collective self-adaptive systems: state of practice
               and a 3D framework},
  booktitle = {Proceedings of the 14th International Symposium on Software Engineering
               for Adaptive and Self-Managing Systems, SEAMS@ICSE 2019, Montreal,
               QC, Canada, May 25-31, 2019},
  pages     = {13--24},
  publisher = {{ACM}},
  year      = {2019},
  annote    = {other},
  url       = {https://doi.org/10.1109/SEAMS.2019.00012},
  doi       = {10.1109/SEAMS.2019.00012},
  timestamp = {Wed, 16 Oct 2019 14:14:49 +0200},
  biburl    = {https://dblp.org/rec/conf/icse/DAngeloGGGNPT19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{watkins1992q,
  title={Q-learning},
  author={Watkins, Christopher JCH and Dayan, Peter},
  journal={Machine learning},
  volume={8},
  number={3-4},
  annote={other},
  pages={279--292},
  year={1992},
  publisher={Springer}
}